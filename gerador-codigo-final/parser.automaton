State 0:
prog' -> . prog [ # ]
-- On ALGORITMO shift to state 1
-- On prog shift to state 3
-- On declaracao_algoritmo shift to state 4

State 1:
declaracao_algoritmo -> ALGORITMO . LITSTRING [ VAR ]
-- On LITSTRING shift to state 2

State 2:
declaracao_algoritmo -> ALGORITMO LITSTRING . [ VAR ]
-- On VAR reduce production declaracao_algoritmo -> ALGORITMO LITSTRING 

State 3:
prog' -> prog . [ # ]
-- On # accept prog

State 4:
prog -> declaracao_algoritmo . VAR list(var_decl) list(func_decl) stm_block EOF [ # ]
-- On VAR shift to state 5

State 5:
prog -> declaracao_algoritmo VAR . list(var_decl) list(func_decl) stm_block EOF [ # ]
-- On ID shift to state 6
-- On var_decl shift to state 9
-- On separated_nonempty_list(VIRGULA,ID) shift to state 10
-- On list(var_decl) shift to state 20
-- On INICIO reduce production list(var_decl) -> 
-- On FUNCAO reduce production list(var_decl) -> 

State 6:
separated_nonempty_list(VIRGULA,ID) -> ID . [ DECLARA ]
separated_nonempty_list(VIRGULA,ID) -> ID . VIRGULA separated_nonempty_list(VIRGULA,ID) [ DECLARA ]
-- On VIRGULA shift to state 7
-- On DECLARA reduce production separated_nonempty_list(VIRGULA,ID) -> ID 

State 7:
separated_nonempty_list(VIRGULA,ID) -> ID VIRGULA . separated_nonempty_list(VIRGULA,ID) [ DECLARA ]
-- On ID shift to state 6
-- On separated_nonempty_list(VIRGULA,ID) shift to state 8

State 8:
separated_nonempty_list(VIRGULA,ID) -> ID VIRGULA separated_nonempty_list(VIRGULA,ID) . [ DECLARA ]
-- On DECLARA reduce production separated_nonempty_list(VIRGULA,ID) -> ID VIRGULA separated_nonempty_list(VIRGULA,ID) 

State 9:
list(var_decl) -> var_decl . list(var_decl) [ INICIO FUNCAO ]
-- On ID shift to state 6
-- On var_decl shift to state 9
-- On separated_nonempty_list(VIRGULA,ID) shift to state 10
-- On list(var_decl) shift to state 19
-- On INICIO reduce production list(var_decl) -> 
-- On FUNCAO reduce production list(var_decl) -> 

State 10:
var_decl -> separated_nonempty_list(VIRGULA,ID) . DECLARA tp_primitivo PTV [ INICIO ID FUNCAO ]
-- On DECLARA shift to state 11

State 11:
var_decl -> separated_nonempty_list(VIRGULA,ID) DECLARA . tp_primitivo PTV [ INICIO ID FUNCAO ]
-- On VOID shift to state 12
-- On REAL shift to state 13
-- On LOGICO shift to state 14
-- On INTEIRO shift to state 15
-- On CARACTER shift to state 16
-- On tp_primitivo shift to state 17

State 12:
tp_primitivo -> VOID . [ VIRGULA VAR PTV FPAR ]
-- On VIRGULA reduce production tp_primitivo -> VOID 
-- On VAR reduce production tp_primitivo -> VOID 
-- On PTV reduce production tp_primitivo -> VOID 
-- On FPAR reduce production tp_primitivo -> VOID 

State 13:
tp_primitivo -> REAL . [ VIRGULA VAR PTV FPAR ]
-- On VIRGULA reduce production tp_primitivo -> REAL 
-- On VAR reduce production tp_primitivo -> REAL 
-- On PTV reduce production tp_primitivo -> REAL 
-- On FPAR reduce production tp_primitivo -> REAL 

State 14:
tp_primitivo -> LOGICO . [ VIRGULA VAR PTV FPAR ]
-- On VIRGULA reduce production tp_primitivo -> LOGICO 
-- On VAR reduce production tp_primitivo -> LOGICO 
-- On PTV reduce production tp_primitivo -> LOGICO 
-- On FPAR reduce production tp_primitivo -> LOGICO 

State 15:
tp_primitivo -> INTEIRO . [ VIRGULA VAR PTV FPAR ]
-- On VIRGULA reduce production tp_primitivo -> INTEIRO 
-- On VAR reduce production tp_primitivo -> INTEIRO 
-- On PTV reduce production tp_primitivo -> INTEIRO 
-- On FPAR reduce production tp_primitivo -> INTEIRO 

State 16:
tp_primitivo -> CARACTER . [ VIRGULA VAR PTV FPAR ]
-- On VIRGULA reduce production tp_primitivo -> CARACTER 
-- On VAR reduce production tp_primitivo -> CARACTER 
-- On PTV reduce production tp_primitivo -> CARACTER 
-- On FPAR reduce production tp_primitivo -> CARACTER 

State 17:
var_decl -> separated_nonempty_list(VIRGULA,ID) DECLARA tp_primitivo . PTV [ INICIO ID FUNCAO ]
-- On PTV shift to state 18

State 18:
var_decl -> separated_nonempty_list(VIRGULA,ID) DECLARA tp_primitivo PTV . [ INICIO ID FUNCAO ]
-- On INICIO reduce production var_decl -> separated_nonempty_list(VIRGULA,ID) DECLARA tp_primitivo PTV 
-- On ID reduce production var_decl -> separated_nonempty_list(VIRGULA,ID) DECLARA tp_primitivo PTV 
-- On FUNCAO reduce production var_decl -> separated_nonempty_list(VIRGULA,ID) DECLARA tp_primitivo PTV 

State 19:
list(var_decl) -> var_decl list(var_decl) . [ INICIO FUNCAO ]
-- On INICIO reduce production list(var_decl) -> var_decl list(var_decl) 
-- On FUNCAO reduce production list(var_decl) -> var_decl list(var_decl) 

State 20:
prog -> declaracao_algoritmo VAR list(var_decl) . list(func_decl) stm_block EOF [ # ]
-- On FUNCAO shift to state 21
-- On list(func_decl) shift to state 173
-- On func_decl shift to state 179
-- On INICIO reduce production list(func_decl) -> 

State 21:
func_decl -> FUNCAO . ID APAR option(fparams) FPAR func_type VAR list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On ID shift to state 22

State 22:
func_decl -> FUNCAO ID . APAR option(fparams) FPAR func_type VAR list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On APAR shift to state 23

State 23:
func_decl -> FUNCAO ID APAR . option(fparams) FPAR func_type VAR list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On ID shift to state 24
-- On separated_nonempty_list(VIRGULA,fparam) shift to state 27
-- On option(fparams) shift to state 28
-- On fparams shift to state 169
-- On fparam shift to state 170
-- On FPAR reduce production option(fparams) -> 

State 24:
fparam -> ID . DECLARA tp_primitivo [ VIRGULA FPAR ]
-- On DECLARA shift to state 25

State 25:
fparam -> ID DECLARA . tp_primitivo [ VIRGULA FPAR ]
-- On VOID shift to state 12
-- On REAL shift to state 13
-- On LOGICO shift to state 14
-- On INTEIRO shift to state 15
-- On CARACTER shift to state 16
-- On tp_primitivo shift to state 26

State 26:
fparam -> ID DECLARA tp_primitivo . [ VIRGULA FPAR ]
-- On VIRGULA reduce production fparam -> ID DECLARA tp_primitivo 
-- On FPAR reduce production fparam -> ID DECLARA tp_primitivo 

State 27:
fparams -> separated_nonempty_list(VIRGULA,fparam) . [ FPAR ]
-- On FPAR reduce production fparams -> separated_nonempty_list(VIRGULA,fparam) 

State 28:
func_decl -> FUNCAO ID APAR option(fparams) . FPAR func_type VAR list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On FPAR shift to state 29

State 29:
func_decl -> FUNCAO ID APAR option(fparams) FPAR . func_type VAR list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On DECLARA shift to state 30
-- On func_type shift to state 32

State 30:
func_type -> DECLARA . tp_primitivo [ VAR ]
-- On VOID shift to state 12
-- On REAL shift to state 13
-- On LOGICO shift to state 14
-- On INTEIRO shift to state 15
-- On CARACTER shift to state 16
-- On tp_primitivo shift to state 31

State 31:
func_type -> DECLARA tp_primitivo . [ VAR ]
-- On VAR reduce production func_type -> DECLARA tp_primitivo 

State 32:
func_decl -> FUNCAO ID APAR option(fparams) FPAR func_type . VAR list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On VAR shift to state 33

State 33:
func_decl -> FUNCAO ID APAR option(fparams) FPAR func_type VAR . list(var_decl) func_bloc [ INICIO FUNCAO ]
-- On ID shift to state 6
-- On var_decl shift to state 9
-- On separated_nonempty_list(VIRGULA,ID) shift to state 10
-- On list(var_decl) shift to state 34
-- On INICIO reduce production list(var_decl) -> 

State 34:
func_decl -> FUNCAO ID APAR option(fparams) FPAR func_type VAR list(var_decl) . func_bloc [ INICIO FUNCAO ]
-- On INICIO shift to state 35
-- On func_bloc shift to state 168

State 35:
func_bloc -> INICIO . list(stm_list) FIMFUNCAO [ INICIO FUNCAO ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 166
-- On fcall shift to state 141
-- On expr shift to state 143
-- On FIMFUNCAO reduce production list(stm_list) -> 

State 36:
logico_value -> VERDADEIRO . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production logico_value -> VERDADEIRO 
-- On VIRGULA reduce production logico_value -> VERDADEIRO 
-- On SUB reduce production logico_value -> VERDADEIRO 
-- On SOMA reduce production logico_value -> VERDADEIRO 
-- On PTV reduce production logico_value -> VERDADEIRO 
-- On POTENCIA reduce production logico_value -> VERDADEIRO 
-- On PASSO reduce production logico_value -> VERDADEIRO 
-- On OU reduce production logico_value -> VERDADEIRO 
-- On MULT reduce production logico_value -> VERDADEIRO 
-- On MOD reduce production logico_value -> VERDADEIRO 
-- On MENORIGUAL reduce production logico_value -> VERDADEIRO 
-- On MENOR reduce production logico_value -> VERDADEIRO 
-- On MAIORIGUAL reduce production logico_value -> VERDADEIRO 
-- On MAIOR reduce production logico_value -> VERDADEIRO 
-- On IGUAL reduce production logico_value -> VERDADEIRO 
-- On FPAR reduce production logico_value -> VERDADEIRO 
-- On FCOL reduce production logico_value -> VERDADEIRO 
-- On FACA reduce production logico_value -> VERDADEIRO 
-- On ENTAO reduce production logico_value -> VERDADEIRO 
-- On E reduce production logico_value -> VERDADEIRO 
-- On DIVISAO reduce production logico_value -> VERDADEIRO 
-- On DIFERENTE reduce production logico_value -> VERDADEIRO 
-- On DE reduce production logico_value -> VERDADEIRO 
-- On ATRIB reduce production logico_value -> VERDADEIRO 
-- On ATE reduce production logico_value -> VERDADEIRO 

State 37:
stm_se -> SE . expr ENTAO list(stm_list) option(stm_senao) FIMSE [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 91

State 38:
expr -> LITSTRING . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> LITSTRING 
-- On VIRGULA reduce production expr -> LITSTRING 
-- On SUB reduce production expr -> LITSTRING 
-- On SOMA reduce production expr -> LITSTRING 
-- On PTV reduce production expr -> LITSTRING 
-- On POTENCIA reduce production expr -> LITSTRING 
-- On PASSO reduce production expr -> LITSTRING 
-- On OU reduce production expr -> LITSTRING 
-- On MULT reduce production expr -> LITSTRING 
-- On MOD reduce production expr -> LITSTRING 
-- On MENORIGUAL reduce production expr -> LITSTRING 
-- On MENOR reduce production expr -> LITSTRING 
-- On MAIORIGUAL reduce production expr -> LITSTRING 
-- On MAIOR reduce production expr -> LITSTRING 
-- On IGUAL reduce production expr -> LITSTRING 
-- On FPAR reduce production expr -> LITSTRING 
-- On FCOL reduce production expr -> LITSTRING 
-- On FACA reduce production expr -> LITSTRING 
-- On ENTAO reduce production expr -> LITSTRING 
-- On E reduce production expr -> LITSTRING 
-- On DIVISAO reduce production expr -> LITSTRING 
-- On DIFERENTE reduce production expr -> LITSTRING 
-- On DE reduce production expr -> LITSTRING 
-- On ATRIB reduce production expr -> LITSTRING 
-- On ATE reduce production expr -> LITSTRING 

State 39:
expr -> LITCHAR . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> LITCHAR 
-- On VIRGULA reduce production expr -> LITCHAR 
-- On SUB reduce production expr -> LITCHAR 
-- On SOMA reduce production expr -> LITCHAR 
-- On PTV reduce production expr -> LITCHAR 
-- On POTENCIA reduce production expr -> LITCHAR 
-- On PASSO reduce production expr -> LITCHAR 
-- On OU reduce production expr -> LITCHAR 
-- On MULT reduce production expr -> LITCHAR 
-- On MOD reduce production expr -> LITCHAR 
-- On MENORIGUAL reduce production expr -> LITCHAR 
-- On MENOR reduce production expr -> LITCHAR 
-- On MAIORIGUAL reduce production expr -> LITCHAR 
-- On MAIOR reduce production expr -> LITCHAR 
-- On IGUAL reduce production expr -> LITCHAR 
-- On FPAR reduce production expr -> LITCHAR 
-- On FCOL reduce production expr -> LITCHAR 
-- On FACA reduce production expr -> LITCHAR 
-- On ENTAO reduce production expr -> LITCHAR 
-- On E reduce production expr -> LITCHAR 
-- On DIVISAO reduce production expr -> LITCHAR 
-- On DIFERENTE reduce production expr -> LITCHAR 
-- On DE reduce production expr -> LITCHAR 
-- On ATRIB reduce production expr -> LITCHAR 
-- On ATE reduce production expr -> LITCHAR 

State 40:
expr -> INT . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> INT 
-- On VIRGULA reduce production expr -> INT 
-- On SUB reduce production expr -> INT 
-- On SOMA reduce production expr -> INT 
-- On PTV reduce production expr -> INT 
-- On POTENCIA reduce production expr -> INT 
-- On PASSO reduce production expr -> INT 
-- On OU reduce production expr -> INT 
-- On MULT reduce production expr -> INT 
-- On MOD reduce production expr -> INT 
-- On MENORIGUAL reduce production expr -> INT 
-- On MENOR reduce production expr -> INT 
-- On MAIORIGUAL reduce production expr -> INT 
-- On MAIOR reduce production expr -> INT 
-- On IGUAL reduce production expr -> INT 
-- On FPAR reduce production expr -> INT 
-- On FCOL reduce production expr -> INT 
-- On FACA reduce production expr -> INT 
-- On ENTAO reduce production expr -> INT 
-- On E reduce production expr -> INT 
-- On DIVISAO reduce production expr -> INT 
-- On DIFERENTE reduce production expr -> INT 
-- On DE reduce production expr -> INT 
-- On ATRIB reduce production expr -> INT 
-- On ATE reduce production expr -> INT 

State 41:
fcall -> ID . APAR option(fargs) FPAR [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
lvalue -> ID . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ACOL ]
-- On APAR shift to state 42
-- On XOU reduce production lvalue -> ID 
-- On VIRGULA reduce production lvalue -> ID 
-- On SUB reduce production lvalue -> ID 
-- On SOMA reduce production lvalue -> ID 
-- On PTV reduce production lvalue -> ID 
-- On POTENCIA reduce production lvalue -> ID 
-- On PASSO reduce production lvalue -> ID 
-- On OU reduce production lvalue -> ID 
-- On MULT reduce production lvalue -> ID 
-- On MOD reduce production lvalue -> ID 
-- On MENORIGUAL reduce production lvalue -> ID 
-- On MENOR reduce production lvalue -> ID 
-- On MAIORIGUAL reduce production lvalue -> ID 
-- On MAIOR reduce production lvalue -> ID 
-- On IGUAL reduce production lvalue -> ID 
-- On FPAR reduce production lvalue -> ID 
-- On FCOL reduce production lvalue -> ID 
-- On FACA reduce production lvalue -> ID 
-- On ENTAO reduce production lvalue -> ID 
-- On E reduce production lvalue -> ID 
-- On DIVISAO reduce production lvalue -> ID 
-- On DIFERENTE reduce production lvalue -> ID 
-- On DE reduce production lvalue -> ID 
-- On ATRIB reduce production lvalue -> ID 
-- On ATE reduce production lvalue -> ID 
-- On ACOL reduce production lvalue -> ID 

State 42:
fcall -> ID APAR . option(fargs) FPAR [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On separated_nonempty_list(VIRGULA,expr) shift to state 84
-- On option(fargs) shift to state 85
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On fargs shift to state 87
-- On expr shift to state 88
-- On FPAR reduce production option(fargs) -> 

State 43:
expr -> FLOAT . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> FLOAT 
-- On VIRGULA reduce production expr -> FLOAT 
-- On SUB reduce production expr -> FLOAT 
-- On SOMA reduce production expr -> FLOAT 
-- On PTV reduce production expr -> FLOAT 
-- On POTENCIA reduce production expr -> FLOAT 
-- On PASSO reduce production expr -> FLOAT 
-- On OU reduce production expr -> FLOAT 
-- On MULT reduce production expr -> FLOAT 
-- On MOD reduce production expr -> FLOAT 
-- On MENORIGUAL reduce production expr -> FLOAT 
-- On MENOR reduce production expr -> FLOAT 
-- On MAIORIGUAL reduce production expr -> FLOAT 
-- On MAIOR reduce production expr -> FLOAT 
-- On IGUAL reduce production expr -> FLOAT 
-- On FPAR reduce production expr -> FLOAT 
-- On FCOL reduce production expr -> FLOAT 
-- On FACA reduce production expr -> FLOAT 
-- On ENTAO reduce production expr -> FLOAT 
-- On E reduce production expr -> FLOAT 
-- On DIVISAO reduce production expr -> FLOAT 
-- On DIFERENTE reduce production expr -> FLOAT 
-- On DE reduce production expr -> FLOAT 
-- On ATRIB reduce production expr -> FLOAT 
-- On ATE reduce production expr -> FLOAT 

State 44:
logico_value -> FALSO . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production logico_value -> FALSO 
-- On VIRGULA reduce production logico_value -> FALSO 
-- On SUB reduce production logico_value -> FALSO 
-- On SOMA reduce production logico_value -> FALSO 
-- On PTV reduce production logico_value -> FALSO 
-- On POTENCIA reduce production logico_value -> FALSO 
-- On PASSO reduce production logico_value -> FALSO 
-- On OU reduce production logico_value -> FALSO 
-- On MULT reduce production logico_value -> FALSO 
-- On MOD reduce production logico_value -> FALSO 
-- On MENORIGUAL reduce production logico_value -> FALSO 
-- On MENOR reduce production logico_value -> FALSO 
-- On MAIORIGUAL reduce production logico_value -> FALSO 
-- On MAIOR reduce production logico_value -> FALSO 
-- On IGUAL reduce production logico_value -> FALSO 
-- On FPAR reduce production logico_value -> FALSO 
-- On FCOL reduce production logico_value -> FALSO 
-- On FACA reduce production logico_value -> FALSO 
-- On ENTAO reduce production logico_value -> FALSO 
-- On E reduce production logico_value -> FALSO 
-- On DIVISAO reduce production logico_value -> FALSO 
-- On DIFERENTE reduce production logico_value -> FALSO 
-- On DE reduce production logico_value -> FALSO 
-- On ATRIB reduce production logico_value -> FALSO 
-- On ATE reduce production logico_value -> FALSO 

State 45:
expr -> APAR . expr FPAR [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 82

State 46:
expr -> lvalue . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
lvalue -> lvalue . ACOL expr FCOL [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ACOL ]
-- On ACOL shift to state 47
-- On XOU reduce production expr -> lvalue 
-- On VIRGULA reduce production expr -> lvalue 
-- On SUB reduce production expr -> lvalue 
-- On SOMA reduce production expr -> lvalue 
-- On PTV reduce production expr -> lvalue 
-- On POTENCIA reduce production expr -> lvalue 
-- On PASSO reduce production expr -> lvalue 
-- On OU reduce production expr -> lvalue 
-- On MULT reduce production expr -> lvalue 
-- On MOD reduce production expr -> lvalue 
-- On MENORIGUAL reduce production expr -> lvalue 
-- On MENOR reduce production expr -> lvalue 
-- On MAIORIGUAL reduce production expr -> lvalue 
-- On MAIOR reduce production expr -> lvalue 
-- On IGUAL reduce production expr -> lvalue 
-- On FPAR reduce production expr -> lvalue 
-- On FCOL reduce production expr -> lvalue 
-- On FACA reduce production expr -> lvalue 
-- On ENTAO reduce production expr -> lvalue 
-- On E reduce production expr -> lvalue 
-- On DIVISAO reduce production expr -> lvalue 
-- On DIFERENTE reduce production expr -> lvalue 
-- On DE reduce production expr -> lvalue 
-- On ATRIB reduce production expr -> lvalue 
-- On ATE reduce production expr -> lvalue 

State 47:
lvalue -> lvalue ACOL . expr FCOL [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ACOL ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 50

State 48:
expr -> logico_value . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> logico_value 
-- On VIRGULA reduce production expr -> logico_value 
-- On SUB reduce production expr -> logico_value 
-- On SOMA reduce production expr -> logico_value 
-- On PTV reduce production expr -> logico_value 
-- On POTENCIA reduce production expr -> logico_value 
-- On PASSO reduce production expr -> logico_value 
-- On OU reduce production expr -> logico_value 
-- On MULT reduce production expr -> logico_value 
-- On MOD reduce production expr -> logico_value 
-- On MENORIGUAL reduce production expr -> logico_value 
-- On MENOR reduce production expr -> logico_value 
-- On MAIORIGUAL reduce production expr -> logico_value 
-- On MAIOR reduce production expr -> logico_value 
-- On IGUAL reduce production expr -> logico_value 
-- On FPAR reduce production expr -> logico_value 
-- On FCOL reduce production expr -> logico_value 
-- On FACA reduce production expr -> logico_value 
-- On ENTAO reduce production expr -> logico_value 
-- On E reduce production expr -> logico_value 
-- On DIVISAO reduce production expr -> logico_value 
-- On DIFERENTE reduce production expr -> logico_value 
-- On DE reduce production expr -> logico_value 
-- On ATRIB reduce production expr -> logico_value 
-- On ATE reduce production expr -> logico_value 

State 49:
expr -> fcall . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> fcall 
-- On VIRGULA reduce production expr -> fcall 
-- On SUB reduce production expr -> fcall 
-- On SOMA reduce production expr -> fcall 
-- On PTV reduce production expr -> fcall 
-- On POTENCIA reduce production expr -> fcall 
-- On PASSO reduce production expr -> fcall 
-- On OU reduce production expr -> fcall 
-- On MULT reduce production expr -> fcall 
-- On MOD reduce production expr -> fcall 
-- On MENORIGUAL reduce production expr -> fcall 
-- On MENOR reduce production expr -> fcall 
-- On MAIORIGUAL reduce production expr -> fcall 
-- On MAIOR reduce production expr -> fcall 
-- On IGUAL reduce production expr -> fcall 
-- On FPAR reduce production expr -> fcall 
-- On FCOL reduce production expr -> fcall 
-- On FACA reduce production expr -> fcall 
-- On ENTAO reduce production expr -> fcall 
-- On E reduce production expr -> fcall 
-- On DIVISAO reduce production expr -> fcall 
-- On DIFERENTE reduce production expr -> fcall 
-- On DE reduce production expr -> fcall 
-- On ATRIB reduce production expr -> fcall 
-- On ATE reduce production expr -> fcall 

State 50:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FCOL E DIVISAO DIFERENTE ]
lvalue -> lvalue ACOL expr . FCOL [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ACOL ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On FCOL shift to state 81
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77

State 51:
expr -> expr XOU . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 52

State 52:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr XOU expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On XOU reduce production expr -> expr XOU expr 
-- On VIRGULA reduce production expr -> expr XOU expr 
-- On PTV reduce production expr -> expr XOU expr 
-- On PASSO reduce production expr -> expr XOU expr 
-- On OU reduce production expr -> expr XOU expr 
-- On FPAR reduce production expr -> expr XOU expr 
-- On FCOL reduce production expr -> expr XOU expr 
-- On FACA reduce production expr -> expr XOU expr 
-- On ENTAO reduce production expr -> expr XOU expr 
-- On DE reduce production expr -> expr XOU expr 
-- On ATRIB reduce production expr -> expr XOU expr 
-- On ATE reduce production expr -> expr XOU expr 

State 53:
expr -> expr SUB . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 54

State 54:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr SUB expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr SUB expr 
-- On VIRGULA reduce production expr -> expr SUB expr 
-- On SUB reduce production expr -> expr SUB expr 
-- On SOMA reduce production expr -> expr SUB expr 
-- On PTV reduce production expr -> expr SUB expr 
-- On PASSO reduce production expr -> expr SUB expr 
-- On OU reduce production expr -> expr SUB expr 
-- On MENORIGUAL reduce production expr -> expr SUB expr 
-- On MENOR reduce production expr -> expr SUB expr 
-- On MAIORIGUAL reduce production expr -> expr SUB expr 
-- On MAIOR reduce production expr -> expr SUB expr 
-- On IGUAL reduce production expr -> expr SUB expr 
-- On FPAR reduce production expr -> expr SUB expr 
-- On FCOL reduce production expr -> expr SUB expr 
-- On FACA reduce production expr -> expr SUB expr 
-- On ENTAO reduce production expr -> expr SUB expr 
-- On E reduce production expr -> expr SUB expr 
-- On DIFERENTE reduce production expr -> expr SUB expr 
-- On DE reduce production expr -> expr SUB expr 
-- On ATRIB reduce production expr -> expr SUB expr 
-- On ATE reduce production expr -> expr SUB expr 

State 55:
expr -> expr POTENCIA . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 56

State 56:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr POTENCIA expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On POTENCIA shift to state 55
-- On XOU reduce production expr -> expr POTENCIA expr 
-- On VIRGULA reduce production expr -> expr POTENCIA expr 
-- On SUB reduce production expr -> expr POTENCIA expr 
-- On SOMA reduce production expr -> expr POTENCIA expr 
-- On PTV reduce production expr -> expr POTENCIA expr 
-- On PASSO reduce production expr -> expr POTENCIA expr 
-- On OU reduce production expr -> expr POTENCIA expr 
-- On MULT reduce production expr -> expr POTENCIA expr 
-- On MOD reduce production expr -> expr POTENCIA expr 
-- On MENORIGUAL reduce production expr -> expr POTENCIA expr 
-- On MENOR reduce production expr -> expr POTENCIA expr 
-- On MAIORIGUAL reduce production expr -> expr POTENCIA expr 
-- On MAIOR reduce production expr -> expr POTENCIA expr 
-- On IGUAL reduce production expr -> expr POTENCIA expr 
-- On FPAR reduce production expr -> expr POTENCIA expr 
-- On FCOL reduce production expr -> expr POTENCIA expr 
-- On FACA reduce production expr -> expr POTENCIA expr 
-- On ENTAO reduce production expr -> expr POTENCIA expr 
-- On E reduce production expr -> expr POTENCIA expr 
-- On DIVISAO reduce production expr -> expr POTENCIA expr 
-- On DIFERENTE reduce production expr -> expr POTENCIA expr 
-- On DE reduce production expr -> expr POTENCIA expr 
-- On ATRIB reduce production expr -> expr POTENCIA expr 
-- On ATE reduce production expr -> expr POTENCIA expr 

State 57:
expr -> expr MULT . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 58

State 58:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr MULT expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On POTENCIA shift to state 55
-- On XOU reduce production expr -> expr MULT expr 
-- On VIRGULA reduce production expr -> expr MULT expr 
-- On SUB reduce production expr -> expr MULT expr 
-- On SOMA reduce production expr -> expr MULT expr 
-- On PTV reduce production expr -> expr MULT expr 
-- On PASSO reduce production expr -> expr MULT expr 
-- On OU reduce production expr -> expr MULT expr 
-- On MULT reduce production expr -> expr MULT expr 
-- On MOD reduce production expr -> expr MULT expr 
-- On MENORIGUAL reduce production expr -> expr MULT expr 
-- On MENOR reduce production expr -> expr MULT expr 
-- On MAIORIGUAL reduce production expr -> expr MULT expr 
-- On MAIOR reduce production expr -> expr MULT expr 
-- On IGUAL reduce production expr -> expr MULT expr 
-- On FPAR reduce production expr -> expr MULT expr 
-- On FCOL reduce production expr -> expr MULT expr 
-- On FACA reduce production expr -> expr MULT expr 
-- On ENTAO reduce production expr -> expr MULT expr 
-- On E reduce production expr -> expr MULT expr 
-- On DIVISAO reduce production expr -> expr MULT expr 
-- On DIFERENTE reduce production expr -> expr MULT expr 
-- On DE reduce production expr -> expr MULT expr 
-- On ATRIB reduce production expr -> expr MULT expr 
-- On ATE reduce production expr -> expr MULT expr 

State 59:
expr -> expr MOD . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 60

State 60:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr MOD expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On POTENCIA shift to state 55
-- On XOU reduce production expr -> expr MOD expr 
-- On VIRGULA reduce production expr -> expr MOD expr 
-- On SUB reduce production expr -> expr MOD expr 
-- On SOMA reduce production expr -> expr MOD expr 
-- On PTV reduce production expr -> expr MOD expr 
-- On PASSO reduce production expr -> expr MOD expr 
-- On OU reduce production expr -> expr MOD expr 
-- On MULT reduce production expr -> expr MOD expr 
-- On MOD reduce production expr -> expr MOD expr 
-- On MENORIGUAL reduce production expr -> expr MOD expr 
-- On MENOR reduce production expr -> expr MOD expr 
-- On MAIORIGUAL reduce production expr -> expr MOD expr 
-- On MAIOR reduce production expr -> expr MOD expr 
-- On IGUAL reduce production expr -> expr MOD expr 
-- On FPAR reduce production expr -> expr MOD expr 
-- On FCOL reduce production expr -> expr MOD expr 
-- On FACA reduce production expr -> expr MOD expr 
-- On ENTAO reduce production expr -> expr MOD expr 
-- On E reduce production expr -> expr MOD expr 
-- On DIVISAO reduce production expr -> expr MOD expr 
-- On DIFERENTE reduce production expr -> expr MOD expr 
-- On DE reduce production expr -> expr MOD expr 
-- On ATRIB reduce production expr -> expr MOD expr 
-- On ATE reduce production expr -> expr MOD expr 

State 61:
expr -> expr DIVISAO . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 62

State 62:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr DIVISAO expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On POTENCIA shift to state 55
-- On XOU reduce production expr -> expr DIVISAO expr 
-- On VIRGULA reduce production expr -> expr DIVISAO expr 
-- On SUB reduce production expr -> expr DIVISAO expr 
-- On SOMA reduce production expr -> expr DIVISAO expr 
-- On PTV reduce production expr -> expr DIVISAO expr 
-- On PASSO reduce production expr -> expr DIVISAO expr 
-- On OU reduce production expr -> expr DIVISAO expr 
-- On MULT reduce production expr -> expr DIVISAO expr 
-- On MOD reduce production expr -> expr DIVISAO expr 
-- On MENORIGUAL reduce production expr -> expr DIVISAO expr 
-- On MENOR reduce production expr -> expr DIVISAO expr 
-- On MAIORIGUAL reduce production expr -> expr DIVISAO expr 
-- On MAIOR reduce production expr -> expr DIVISAO expr 
-- On IGUAL reduce production expr -> expr DIVISAO expr 
-- On FPAR reduce production expr -> expr DIVISAO expr 
-- On FCOL reduce production expr -> expr DIVISAO expr 
-- On FACA reduce production expr -> expr DIVISAO expr 
-- On ENTAO reduce production expr -> expr DIVISAO expr 
-- On E reduce production expr -> expr DIVISAO expr 
-- On DIVISAO reduce production expr -> expr DIVISAO expr 
-- On DIFERENTE reduce production expr -> expr DIVISAO expr 
-- On DE reduce production expr -> expr DIVISAO expr 
-- On ATRIB reduce production expr -> expr DIVISAO expr 
-- On ATE reduce production expr -> expr DIVISAO expr 

State 63:
expr -> expr SOMA . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 64

State 64:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr SOMA expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr SOMA expr 
-- On VIRGULA reduce production expr -> expr SOMA expr 
-- On SUB reduce production expr -> expr SOMA expr 
-- On SOMA reduce production expr -> expr SOMA expr 
-- On PTV reduce production expr -> expr SOMA expr 
-- On PASSO reduce production expr -> expr SOMA expr 
-- On OU reduce production expr -> expr SOMA expr 
-- On MENORIGUAL reduce production expr -> expr SOMA expr 
-- On MENOR reduce production expr -> expr SOMA expr 
-- On MAIORIGUAL reduce production expr -> expr SOMA expr 
-- On MAIOR reduce production expr -> expr SOMA expr 
-- On IGUAL reduce production expr -> expr SOMA expr 
-- On FPAR reduce production expr -> expr SOMA expr 
-- On FCOL reduce production expr -> expr SOMA expr 
-- On FACA reduce production expr -> expr SOMA expr 
-- On ENTAO reduce production expr -> expr SOMA expr 
-- On E reduce production expr -> expr SOMA expr 
-- On DIFERENTE reduce production expr -> expr SOMA expr 
-- On DE reduce production expr -> expr SOMA expr 
-- On ATRIB reduce production expr -> expr SOMA expr 
-- On ATE reduce production expr -> expr SOMA expr 

State 65:
expr -> expr MENORIGUAL . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 66

State 66:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr MENORIGUAL expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr MENORIGUAL expr 
-- On VIRGULA reduce production expr -> expr MENORIGUAL expr 
-- On PTV reduce production expr -> expr MENORIGUAL expr 
-- On PASSO reduce production expr -> expr MENORIGUAL expr 
-- On OU reduce production expr -> expr MENORIGUAL expr 
-- On MENORIGUAL reduce production expr -> expr MENORIGUAL expr 
-- On MENOR reduce production expr -> expr MENORIGUAL expr 
-- On MAIORIGUAL reduce production expr -> expr MENORIGUAL expr 
-- On MAIOR reduce production expr -> expr MENORIGUAL expr 
-- On IGUAL reduce production expr -> expr MENORIGUAL expr 
-- On FPAR reduce production expr -> expr MENORIGUAL expr 
-- On FCOL reduce production expr -> expr MENORIGUAL expr 
-- On FACA reduce production expr -> expr MENORIGUAL expr 
-- On ENTAO reduce production expr -> expr MENORIGUAL expr 
-- On E reduce production expr -> expr MENORIGUAL expr 
-- On DIFERENTE reduce production expr -> expr MENORIGUAL expr 
-- On DE reduce production expr -> expr MENORIGUAL expr 
-- On ATRIB reduce production expr -> expr MENORIGUAL expr 
-- On ATE reduce production expr -> expr MENORIGUAL expr 

State 67:
expr -> expr MENOR . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 68

State 68:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr MENOR expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr MENOR expr 
-- On VIRGULA reduce production expr -> expr MENOR expr 
-- On PTV reduce production expr -> expr MENOR expr 
-- On PASSO reduce production expr -> expr MENOR expr 
-- On OU reduce production expr -> expr MENOR expr 
-- On MENORIGUAL reduce production expr -> expr MENOR expr 
-- On MENOR reduce production expr -> expr MENOR expr 
-- On MAIORIGUAL reduce production expr -> expr MENOR expr 
-- On MAIOR reduce production expr -> expr MENOR expr 
-- On IGUAL reduce production expr -> expr MENOR expr 
-- On FPAR reduce production expr -> expr MENOR expr 
-- On FCOL reduce production expr -> expr MENOR expr 
-- On FACA reduce production expr -> expr MENOR expr 
-- On ENTAO reduce production expr -> expr MENOR expr 
-- On E reduce production expr -> expr MENOR expr 
-- On DIFERENTE reduce production expr -> expr MENOR expr 
-- On DE reduce production expr -> expr MENOR expr 
-- On ATRIB reduce production expr -> expr MENOR expr 
-- On ATE reduce production expr -> expr MENOR expr 

State 69:
expr -> expr MAIORIGUAL . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 70

State 70:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr MAIORIGUAL expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr MAIORIGUAL expr 
-- On VIRGULA reduce production expr -> expr MAIORIGUAL expr 
-- On PTV reduce production expr -> expr MAIORIGUAL expr 
-- On PASSO reduce production expr -> expr MAIORIGUAL expr 
-- On OU reduce production expr -> expr MAIORIGUAL expr 
-- On MENORIGUAL reduce production expr -> expr MAIORIGUAL expr 
-- On MENOR reduce production expr -> expr MAIORIGUAL expr 
-- On MAIORIGUAL reduce production expr -> expr MAIORIGUAL expr 
-- On MAIOR reduce production expr -> expr MAIORIGUAL expr 
-- On IGUAL reduce production expr -> expr MAIORIGUAL expr 
-- On FPAR reduce production expr -> expr MAIORIGUAL expr 
-- On FCOL reduce production expr -> expr MAIORIGUAL expr 
-- On FACA reduce production expr -> expr MAIORIGUAL expr 
-- On ENTAO reduce production expr -> expr MAIORIGUAL expr 
-- On E reduce production expr -> expr MAIORIGUAL expr 
-- On DIFERENTE reduce production expr -> expr MAIORIGUAL expr 
-- On DE reduce production expr -> expr MAIORIGUAL expr 
-- On ATRIB reduce production expr -> expr MAIORIGUAL expr 
-- On ATE reduce production expr -> expr MAIORIGUAL expr 

State 71:
expr -> expr MAIOR . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 72

State 72:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr MAIOR expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr MAIOR expr 
-- On VIRGULA reduce production expr -> expr MAIOR expr 
-- On PTV reduce production expr -> expr MAIOR expr 
-- On PASSO reduce production expr -> expr MAIOR expr 
-- On OU reduce production expr -> expr MAIOR expr 
-- On MENORIGUAL reduce production expr -> expr MAIOR expr 
-- On MENOR reduce production expr -> expr MAIOR expr 
-- On MAIORIGUAL reduce production expr -> expr MAIOR expr 
-- On MAIOR reduce production expr -> expr MAIOR expr 
-- On IGUAL reduce production expr -> expr MAIOR expr 
-- On FPAR reduce production expr -> expr MAIOR expr 
-- On FCOL reduce production expr -> expr MAIOR expr 
-- On FACA reduce production expr -> expr MAIOR expr 
-- On ENTAO reduce production expr -> expr MAIOR expr 
-- On E reduce production expr -> expr MAIOR expr 
-- On DIFERENTE reduce production expr -> expr MAIOR expr 
-- On DE reduce production expr -> expr MAIOR expr 
-- On ATRIB reduce production expr -> expr MAIOR expr 
-- On ATE reduce production expr -> expr MAIOR expr 

State 73:
expr -> expr IGUAL . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 74

State 74:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr IGUAL expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr IGUAL expr 
-- On VIRGULA reduce production expr -> expr IGUAL expr 
-- On PTV reduce production expr -> expr IGUAL expr 
-- On PASSO reduce production expr -> expr IGUAL expr 
-- On OU reduce production expr -> expr IGUAL expr 
-- On IGUAL reduce production expr -> expr IGUAL expr 
-- On FPAR reduce production expr -> expr IGUAL expr 
-- On FCOL reduce production expr -> expr IGUAL expr 
-- On FACA reduce production expr -> expr IGUAL expr 
-- On ENTAO reduce production expr -> expr IGUAL expr 
-- On E reduce production expr -> expr IGUAL expr 
-- On DIFERENTE reduce production expr -> expr IGUAL expr 
-- On DE reduce production expr -> expr IGUAL expr 
-- On ATRIB reduce production expr -> expr IGUAL expr 
-- On ATE reduce production expr -> expr IGUAL expr 

State 75:
expr -> expr E . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 76

State 76:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr E expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On XOU reduce production expr -> expr E expr 
-- On VIRGULA reduce production expr -> expr E expr 
-- On PTV reduce production expr -> expr E expr 
-- On PASSO reduce production expr -> expr E expr 
-- On OU reduce production expr -> expr E expr 
-- On FPAR reduce production expr -> expr E expr 
-- On FCOL reduce production expr -> expr E expr 
-- On FACA reduce production expr -> expr E expr 
-- On ENTAO reduce production expr -> expr E expr 
-- On E reduce production expr -> expr E expr 
-- On DE reduce production expr -> expr E expr 
-- On ATRIB reduce production expr -> expr E expr 
-- On ATE reduce production expr -> expr E expr 

State 77:
expr -> expr DIFERENTE . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 78

State 78:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr DIFERENTE expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On DIVISAO shift to state 61
-- On XOU reduce production expr -> expr DIFERENTE expr 
-- On VIRGULA reduce production expr -> expr DIFERENTE expr 
-- On PTV reduce production expr -> expr DIFERENTE expr 
-- On PASSO reduce production expr -> expr DIFERENTE expr 
-- On OU reduce production expr -> expr DIFERENTE expr 
-- On IGUAL reduce production expr -> expr DIFERENTE expr 
-- On FPAR reduce production expr -> expr DIFERENTE expr 
-- On FCOL reduce production expr -> expr DIFERENTE expr 
-- On FACA reduce production expr -> expr DIFERENTE expr 
-- On ENTAO reduce production expr -> expr DIFERENTE expr 
-- On E reduce production expr -> expr DIFERENTE expr 
-- On DIFERENTE reduce production expr -> expr DIFERENTE expr 
-- On DE reduce production expr -> expr DIFERENTE expr 
-- On ATRIB reduce production expr -> expr DIFERENTE expr 
-- On ATE reduce production expr -> expr DIFERENTE expr 

State 79:
expr -> expr OU . expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 80

State 80:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr OU expr . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On XOU reduce production expr -> expr OU expr 
-- On VIRGULA reduce production expr -> expr OU expr 
-- On PTV reduce production expr -> expr OU expr 
-- On PASSO reduce production expr -> expr OU expr 
-- On OU reduce production expr -> expr OU expr 
-- On FPAR reduce production expr -> expr OU expr 
-- On FCOL reduce production expr -> expr OU expr 
-- On FACA reduce production expr -> expr OU expr 
-- On ENTAO reduce production expr -> expr OU expr 
-- On DE reduce production expr -> expr OU expr 
-- On ATRIB reduce production expr -> expr OU expr 
-- On ATE reduce production expr -> expr OU expr 

State 81:
lvalue -> lvalue ACOL expr FCOL . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ACOL ]
-- On XOU reduce production lvalue -> lvalue ACOL expr FCOL 
-- On VIRGULA reduce production lvalue -> lvalue ACOL expr FCOL 
-- On SUB reduce production lvalue -> lvalue ACOL expr FCOL 
-- On SOMA reduce production lvalue -> lvalue ACOL expr FCOL 
-- On PTV reduce production lvalue -> lvalue ACOL expr FCOL 
-- On POTENCIA reduce production lvalue -> lvalue ACOL expr FCOL 
-- On PASSO reduce production lvalue -> lvalue ACOL expr FCOL 
-- On OU reduce production lvalue -> lvalue ACOL expr FCOL 
-- On MULT reduce production lvalue -> lvalue ACOL expr FCOL 
-- On MOD reduce production lvalue -> lvalue ACOL expr FCOL 
-- On MENORIGUAL reduce production lvalue -> lvalue ACOL expr FCOL 
-- On MENOR reduce production lvalue -> lvalue ACOL expr FCOL 
-- On MAIORIGUAL reduce production lvalue -> lvalue ACOL expr FCOL 
-- On MAIOR reduce production lvalue -> lvalue ACOL expr FCOL 
-- On IGUAL reduce production lvalue -> lvalue ACOL expr FCOL 
-- On FPAR reduce production lvalue -> lvalue ACOL expr FCOL 
-- On FCOL reduce production lvalue -> lvalue ACOL expr FCOL 
-- On FACA reduce production lvalue -> lvalue ACOL expr FCOL 
-- On ENTAO reduce production lvalue -> lvalue ACOL expr FCOL 
-- On E reduce production lvalue -> lvalue ACOL expr FCOL 
-- On DIVISAO reduce production lvalue -> lvalue ACOL expr FCOL 
-- On DIFERENTE reduce production lvalue -> lvalue ACOL expr FCOL 
-- On DE reduce production lvalue -> lvalue ACOL expr FCOL 
-- On ATRIB reduce production lvalue -> lvalue ACOL expr FCOL 
-- On ATE reduce production lvalue -> lvalue ACOL expr FCOL 
-- On ACOL reduce production lvalue -> lvalue ACOL expr FCOL 

State 82:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> APAR expr . FPAR [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On FPAR shift to state 83
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77

State 83:
expr -> APAR expr FPAR . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production expr -> APAR expr FPAR 
-- On VIRGULA reduce production expr -> APAR expr FPAR 
-- On SUB reduce production expr -> APAR expr FPAR 
-- On SOMA reduce production expr -> APAR expr FPAR 
-- On PTV reduce production expr -> APAR expr FPAR 
-- On POTENCIA reduce production expr -> APAR expr FPAR 
-- On PASSO reduce production expr -> APAR expr FPAR 
-- On OU reduce production expr -> APAR expr FPAR 
-- On MULT reduce production expr -> APAR expr FPAR 
-- On MOD reduce production expr -> APAR expr FPAR 
-- On MENORIGUAL reduce production expr -> APAR expr FPAR 
-- On MENOR reduce production expr -> APAR expr FPAR 
-- On MAIORIGUAL reduce production expr -> APAR expr FPAR 
-- On MAIOR reduce production expr -> APAR expr FPAR 
-- On IGUAL reduce production expr -> APAR expr FPAR 
-- On FPAR reduce production expr -> APAR expr FPAR 
-- On FCOL reduce production expr -> APAR expr FPAR 
-- On FACA reduce production expr -> APAR expr FPAR 
-- On ENTAO reduce production expr -> APAR expr FPAR 
-- On E reduce production expr -> APAR expr FPAR 
-- On DIVISAO reduce production expr -> APAR expr FPAR 
-- On DIFERENTE reduce production expr -> APAR expr FPAR 
-- On DE reduce production expr -> APAR expr FPAR 
-- On ATRIB reduce production expr -> APAR expr FPAR 
-- On ATE reduce production expr -> APAR expr FPAR 

State 84:
fargs -> separated_nonempty_list(VIRGULA,expr) . [ FPAR ]
-- On FPAR reduce production fargs -> separated_nonempty_list(VIRGULA,expr) 

State 85:
fcall -> ID APAR option(fargs) . FPAR [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On FPAR shift to state 86

State 86:
fcall -> ID APAR option(fargs) FPAR . [ XOU VIRGULA SUB SOMA PTV POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR FCOL FACA ENTAO E DIVISAO DIFERENTE DE ATRIB ATE ]
-- On XOU reduce production fcall -> ID APAR option(fargs) FPAR 
-- On VIRGULA reduce production fcall -> ID APAR option(fargs) FPAR 
-- On SUB reduce production fcall -> ID APAR option(fargs) FPAR 
-- On SOMA reduce production fcall -> ID APAR option(fargs) FPAR 
-- On PTV reduce production fcall -> ID APAR option(fargs) FPAR 
-- On POTENCIA reduce production fcall -> ID APAR option(fargs) FPAR 
-- On PASSO reduce production fcall -> ID APAR option(fargs) FPAR 
-- On OU reduce production fcall -> ID APAR option(fargs) FPAR 
-- On MULT reduce production fcall -> ID APAR option(fargs) FPAR 
-- On MOD reduce production fcall -> ID APAR option(fargs) FPAR 
-- On MENORIGUAL reduce production fcall -> ID APAR option(fargs) FPAR 
-- On MENOR reduce production fcall -> ID APAR option(fargs) FPAR 
-- On MAIORIGUAL reduce production fcall -> ID APAR option(fargs) FPAR 
-- On MAIOR reduce production fcall -> ID APAR option(fargs) FPAR 
-- On IGUAL reduce production fcall -> ID APAR option(fargs) FPAR 
-- On FPAR reduce production fcall -> ID APAR option(fargs) FPAR 
-- On FCOL reduce production fcall -> ID APAR option(fargs) FPAR 
-- On FACA reduce production fcall -> ID APAR option(fargs) FPAR 
-- On ENTAO reduce production fcall -> ID APAR option(fargs) FPAR 
-- On E reduce production fcall -> ID APAR option(fargs) FPAR 
-- On DIVISAO reduce production fcall -> ID APAR option(fargs) FPAR 
-- On DIFERENTE reduce production fcall -> ID APAR option(fargs) FPAR 
-- On DE reduce production fcall -> ID APAR option(fargs) FPAR 
-- On ATRIB reduce production fcall -> ID APAR option(fargs) FPAR 
-- On ATE reduce production fcall -> ID APAR option(fargs) FPAR 

State 87:
option(fargs) -> fargs . [ FPAR ]
-- On FPAR reduce production option(fargs) -> fargs 

State 88:
expr -> expr . SOMA expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU VIRGULA SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FPAR E DIVISAO DIFERENTE ]
separated_nonempty_list(VIRGULA,expr) -> expr . [ FPAR ]
separated_nonempty_list(VIRGULA,expr) -> expr . VIRGULA separated_nonempty_list(VIRGULA,expr) [ FPAR ]
-- On XOU shift to state 51
-- On VIRGULA shift to state 89
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On FPAR reduce production separated_nonempty_list(VIRGULA,expr) -> expr 

State 89:
separated_nonempty_list(VIRGULA,expr) -> expr VIRGULA . separated_nonempty_list(VIRGULA,expr) [ FPAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On separated_nonempty_list(VIRGULA,expr) shift to state 90
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 88

State 90:
separated_nonempty_list(VIRGULA,expr) -> expr VIRGULA separated_nonempty_list(VIRGULA,expr) . [ FPAR ]
-- On FPAR reduce production separated_nonempty_list(VIRGULA,expr) -> expr VIRGULA separated_nonempty_list(VIRGULA,expr) 

State 91:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL ENTAO E DIVISAO DIFERENTE ]
stm_se -> SE expr . ENTAO list(stm_list) option(stm_senao) FIMSE [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On ENTAO shift to state 92
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77

State 92:
stm_se -> SE expr ENTAO . list(stm_list) option(stm_senao) FIMSE [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 160
-- On fcall shift to state 141
-- On expr shift to state 143
-- On SENAO reduce production list(stm_list) -> 
-- On FIMSE reduce production list(stm_list) -> 

State 93:
stm_ret -> RETORNE . option(expr) PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On option(expr) shift to state 94
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 96
-- On PTV reduce production option(expr) -> 

State 94:
stm_ret -> RETORNE option(expr) . PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On PTV shift to state 95

State 95:
stm_ret -> RETORNE option(expr) PTV . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On SENAO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On SE reduce production stm_ret -> RETORNE option(expr) PTV 
-- On RETORNE reduce production stm_ret -> RETORNE option(expr) PTV 
-- On PARA reduce production stm_ret -> RETORNE option(expr) PTV 
-- On OUTROCASO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On LITSTRING reduce production stm_ret -> RETORNE option(expr) PTV 
-- On LITCHAR reduce production stm_ret -> RETORNE option(expr) PTV 
-- On LEIA reduce production stm_ret -> RETORNE option(expr) PTV 
-- On INT reduce production stm_ret -> RETORNE option(expr) PTV 
-- On ID reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FLOAT reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FIMSE reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FIMPARA reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FIMFUNCAO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FIMESCOLHA reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FIMENQUANTO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FIMALGORITMO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On FALSO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On ESCREVAL reduce production stm_ret -> RETORNE option(expr) PTV 
-- On ESCREVA reduce production stm_ret -> RETORNE option(expr) PTV 
-- On ESCOLHA reduce production stm_ret -> RETORNE option(expr) PTV 
-- On ENQUANTO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On CASO reduce production stm_ret -> RETORNE option(expr) PTV 
-- On APAR reduce production stm_ret -> RETORNE option(expr) PTV 

State 96:
expr -> expr . SOMA expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
option(expr) -> expr . [ PTV ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On PTV reduce production option(expr) -> expr 

State 97:
stm_para -> PARA . expr DE expr ATE expr passo FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 98

State 98:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE DE ]
stm_para -> PARA expr . DE expr ATE expr passo FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On DE shift to state 99

State 99:
stm_para -> PARA expr DE . expr ATE expr passo FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 100

State 100:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATE ]
stm_para -> PARA expr DE expr . ATE expr passo FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On ATE shift to state 101

State 101:
stm_para -> PARA expr DE expr ATE . expr passo FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 102

State 102:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA PASSO OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
stm_para -> PARA expr DE expr ATE expr . passo FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On PASSO shift to state 103
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On passo shift to state 105

State 103:
passo -> PASSO . INT [ FACA ]
-- On INT shift to state 104

State 104:
passo -> PASSO INT . [ FACA ]
-- On FACA reduce production passo -> PASSO INT 

State 105:
stm_para -> PARA expr DE expr ATE expr passo . FACA list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FACA shift to state 106

State 106:
stm_para -> PARA expr DE expr ATE expr passo FACA . list(stm_list) FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 158
-- On fcall shift to state 141
-- On expr shift to state 143
-- On FIMPARA reduce production list(stm_list) -> 

State 107:
stm_leia -> LEIA . APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On APAR shift to state 108

State 108:
stm_leia -> LEIA APAR . separated_nonempty_list(VIRGULA,expr) FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On separated_nonempty_list(VIRGULA,expr) shift to state 109
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 88

State 109:
stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) . FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FPAR shift to state 110

State 110:
stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR . PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On PTV shift to state 111

State 111:
stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On SENAO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On SE reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On RETORNE reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On PARA reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On OUTROCASO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LITSTRING reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LITCHAR reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LEIA reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On INT reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ID reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FLOAT reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMSE reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMPARA reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMFUNCAO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMESCOLHA reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMENQUANTO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMALGORITMO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FALSO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCREVAL reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCREVA reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCOLHA reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ENQUANTO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On CASO reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On APAR reduce production stm_leia -> LEIA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 

State 112:
stm_escreval -> ESCREVAL . APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On APAR shift to state 113

State 113:
stm_escreval -> ESCREVAL APAR . separated_nonempty_list(VIRGULA,expr) FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On separated_nonempty_list(VIRGULA,expr) shift to state 114
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 88

State 114:
stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) . FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FPAR shift to state 115

State 115:
stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR . PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On PTV shift to state 116

State 116:
stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On SENAO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On SE reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On RETORNE reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On PARA reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On OUTROCASO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LITSTRING reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LITCHAR reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LEIA reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On INT reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ID reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FLOAT reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMSE reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMPARA reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMFUNCAO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMESCOLHA reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMENQUANTO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMALGORITMO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FALSO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCREVAL reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCREVA reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCOLHA reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ENQUANTO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On CASO reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On APAR reduce production stm_escreval -> ESCREVAL APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 

State 117:
stm_escreva -> ESCREVA . APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On APAR shift to state 118

State 118:
stm_escreva -> ESCREVA APAR . separated_nonempty_list(VIRGULA,expr) FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On separated_nonempty_list(VIRGULA,expr) shift to state 119
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 88

State 119:
stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) . FPAR PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FPAR shift to state 120

State 120:
stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR . PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On PTV shift to state 121

State 121:
stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On SENAO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On SE reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On RETORNE reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On PARA reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On OUTROCASO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LITSTRING reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LITCHAR reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On LEIA reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On INT reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ID reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FLOAT reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMSE reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMPARA reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMFUNCAO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMESCOLHA reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMENQUANTO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FIMALGORITMO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On FALSO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCREVAL reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCREVA reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ESCOLHA reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On ENQUANTO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On CASO reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 
-- On APAR reduce production stm_escreva -> ESCREVA APAR separated_nonempty_list(VIRGULA,expr) FPAR PTV 

State 122:
stm_escolha -> ESCOLHA . ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On ID shift to state 123

State 123:
stm_escolha -> ESCOLHA ID . nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On CASO shift to state 124
-- On nonempty_list(case) shift to state 152
-- On case shift to state 156

State 124:
case -> CASO . LITCHAR list(stm_list) [ OUTROCASO CASO ]
case -> CASO . INT list(stm_list) [ OUTROCASO CASO ]
-- On LITCHAR shift to state 125
-- On INT shift to state 150

State 125:
case -> CASO LITCHAR . list(stm_list) [ OUTROCASO CASO ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 149
-- On fcall shift to state 141
-- On expr shift to state 143
-- On OUTROCASO reduce production list(stm_list) -> 
-- On CASO reduce production list(stm_list) -> 

State 126:
stm_enquanto -> ENQUANTO . expr FACA list(stm_list) FIMENQUANTO [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 127

State 127:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL FACA E DIVISAO DIFERENTE ]
stm_enquanto -> ENQUANTO expr . FACA list(stm_list) FIMENQUANTO [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On FACA shift to state 128
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77

State 128:
stm_enquanto -> ENQUANTO expr FACA . list(stm_list) FIMENQUANTO [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 147
-- On fcall shift to state 141
-- On expr shift to state 143
-- On FIMENQUANTO reduce production list(stm_list) -> 

State 129:
stm_list -> stm_se . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_se 
-- On SENAO reduce production stm_list -> stm_se 
-- On SE reduce production stm_list -> stm_se 
-- On RETORNE reduce production stm_list -> stm_se 
-- On PARA reduce production stm_list -> stm_se 
-- On OUTROCASO reduce production stm_list -> stm_se 
-- On LITSTRING reduce production stm_list -> stm_se 
-- On LITCHAR reduce production stm_list -> stm_se 
-- On LEIA reduce production stm_list -> stm_se 
-- On INT reduce production stm_list -> stm_se 
-- On ID reduce production stm_list -> stm_se 
-- On FLOAT reduce production stm_list -> stm_se 
-- On FIMSE reduce production stm_list -> stm_se 
-- On FIMPARA reduce production stm_list -> stm_se 
-- On FIMFUNCAO reduce production stm_list -> stm_se 
-- On FIMESCOLHA reduce production stm_list -> stm_se 
-- On FIMENQUANTO reduce production stm_list -> stm_se 
-- On FIMALGORITMO reduce production stm_list -> stm_se 
-- On FALSO reduce production stm_list -> stm_se 
-- On ESCREVAL reduce production stm_list -> stm_se 
-- On ESCREVA reduce production stm_list -> stm_se 
-- On ESCOLHA reduce production stm_list -> stm_se 
-- On ENQUANTO reduce production stm_list -> stm_se 
-- On CASO reduce production stm_list -> stm_se 
-- On APAR reduce production stm_list -> stm_se 

State 130:
stm_list -> stm_ret . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_ret 
-- On SENAO reduce production stm_list -> stm_ret 
-- On SE reduce production stm_list -> stm_ret 
-- On RETORNE reduce production stm_list -> stm_ret 
-- On PARA reduce production stm_list -> stm_ret 
-- On OUTROCASO reduce production stm_list -> stm_ret 
-- On LITSTRING reduce production stm_list -> stm_ret 
-- On LITCHAR reduce production stm_list -> stm_ret 
-- On LEIA reduce production stm_list -> stm_ret 
-- On INT reduce production stm_list -> stm_ret 
-- On ID reduce production stm_list -> stm_ret 
-- On FLOAT reduce production stm_list -> stm_ret 
-- On FIMSE reduce production stm_list -> stm_ret 
-- On FIMPARA reduce production stm_list -> stm_ret 
-- On FIMFUNCAO reduce production stm_list -> stm_ret 
-- On FIMESCOLHA reduce production stm_list -> stm_ret 
-- On FIMENQUANTO reduce production stm_list -> stm_ret 
-- On FIMALGORITMO reduce production stm_list -> stm_ret 
-- On FALSO reduce production stm_list -> stm_ret 
-- On ESCREVAL reduce production stm_list -> stm_ret 
-- On ESCREVA reduce production stm_list -> stm_ret 
-- On ESCOLHA reduce production stm_list -> stm_ret 
-- On ENQUANTO reduce production stm_list -> stm_ret 
-- On CASO reduce production stm_list -> stm_ret 
-- On APAR reduce production stm_list -> stm_ret 

State 131:
stm_list -> stm_para . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_para 
-- On SENAO reduce production stm_list -> stm_para 
-- On SE reduce production stm_list -> stm_para 
-- On RETORNE reduce production stm_list -> stm_para 
-- On PARA reduce production stm_list -> stm_para 
-- On OUTROCASO reduce production stm_list -> stm_para 
-- On LITSTRING reduce production stm_list -> stm_para 
-- On LITCHAR reduce production stm_list -> stm_para 
-- On LEIA reduce production stm_list -> stm_para 
-- On INT reduce production stm_list -> stm_para 
-- On ID reduce production stm_list -> stm_para 
-- On FLOAT reduce production stm_list -> stm_para 
-- On FIMSE reduce production stm_list -> stm_para 
-- On FIMPARA reduce production stm_list -> stm_para 
-- On FIMFUNCAO reduce production stm_list -> stm_para 
-- On FIMESCOLHA reduce production stm_list -> stm_para 
-- On FIMENQUANTO reduce production stm_list -> stm_para 
-- On FIMALGORITMO reduce production stm_list -> stm_para 
-- On FALSO reduce production stm_list -> stm_para 
-- On ESCREVAL reduce production stm_list -> stm_para 
-- On ESCREVA reduce production stm_list -> stm_para 
-- On ESCOLHA reduce production stm_list -> stm_para 
-- On ENQUANTO reduce production stm_list -> stm_para 
-- On CASO reduce production stm_list -> stm_para 
-- On APAR reduce production stm_list -> stm_para 

State 132:
list(stm_list) -> stm_list . list(stm_list) [ SENAO OUTROCASO FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO CASO ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 140
-- On fcall shift to state 141
-- On expr shift to state 143
-- On SENAO reduce production list(stm_list) -> 
-- On OUTROCASO reduce production list(stm_list) -> 
-- On FIMSE reduce production list(stm_list) -> 
-- On FIMPARA reduce production list(stm_list) -> 
-- On FIMFUNCAO reduce production list(stm_list) -> 
-- On FIMESCOLHA reduce production list(stm_list) -> 
-- On FIMENQUANTO reduce production list(stm_list) -> 
-- On FIMALGORITMO reduce production list(stm_list) -> 
-- On CASO reduce production list(stm_list) -> 

State 133:
stm_list -> stm_leia . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_leia 
-- On SENAO reduce production stm_list -> stm_leia 
-- On SE reduce production stm_list -> stm_leia 
-- On RETORNE reduce production stm_list -> stm_leia 
-- On PARA reduce production stm_list -> stm_leia 
-- On OUTROCASO reduce production stm_list -> stm_leia 
-- On LITSTRING reduce production stm_list -> stm_leia 
-- On LITCHAR reduce production stm_list -> stm_leia 
-- On LEIA reduce production stm_list -> stm_leia 
-- On INT reduce production stm_list -> stm_leia 
-- On ID reduce production stm_list -> stm_leia 
-- On FLOAT reduce production stm_list -> stm_leia 
-- On FIMSE reduce production stm_list -> stm_leia 
-- On FIMPARA reduce production stm_list -> stm_leia 
-- On FIMFUNCAO reduce production stm_list -> stm_leia 
-- On FIMESCOLHA reduce production stm_list -> stm_leia 
-- On FIMENQUANTO reduce production stm_list -> stm_leia 
-- On FIMALGORITMO reduce production stm_list -> stm_leia 
-- On FALSO reduce production stm_list -> stm_leia 
-- On ESCREVAL reduce production stm_list -> stm_leia 
-- On ESCREVA reduce production stm_list -> stm_leia 
-- On ESCOLHA reduce production stm_list -> stm_leia 
-- On ENQUANTO reduce production stm_list -> stm_leia 
-- On CASO reduce production stm_list -> stm_leia 
-- On APAR reduce production stm_list -> stm_leia 

State 134:
stm_list -> stm_fcall . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_fcall 
-- On SENAO reduce production stm_list -> stm_fcall 
-- On SE reduce production stm_list -> stm_fcall 
-- On RETORNE reduce production stm_list -> stm_fcall 
-- On PARA reduce production stm_list -> stm_fcall 
-- On OUTROCASO reduce production stm_list -> stm_fcall 
-- On LITSTRING reduce production stm_list -> stm_fcall 
-- On LITCHAR reduce production stm_list -> stm_fcall 
-- On LEIA reduce production stm_list -> stm_fcall 
-- On INT reduce production stm_list -> stm_fcall 
-- On ID reduce production stm_list -> stm_fcall 
-- On FLOAT reduce production stm_list -> stm_fcall 
-- On FIMSE reduce production stm_list -> stm_fcall 
-- On FIMPARA reduce production stm_list -> stm_fcall 
-- On FIMFUNCAO reduce production stm_list -> stm_fcall 
-- On FIMESCOLHA reduce production stm_list -> stm_fcall 
-- On FIMENQUANTO reduce production stm_list -> stm_fcall 
-- On FIMALGORITMO reduce production stm_list -> stm_fcall 
-- On FALSO reduce production stm_list -> stm_fcall 
-- On ESCREVAL reduce production stm_list -> stm_fcall 
-- On ESCREVA reduce production stm_list -> stm_fcall 
-- On ESCOLHA reduce production stm_list -> stm_fcall 
-- On ENQUANTO reduce production stm_list -> stm_fcall 
-- On CASO reduce production stm_list -> stm_fcall 
-- On APAR reduce production stm_list -> stm_fcall 

State 135:
stm_list -> stm_escreval . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_escreval 
-- On SENAO reduce production stm_list -> stm_escreval 
-- On SE reduce production stm_list -> stm_escreval 
-- On RETORNE reduce production stm_list -> stm_escreval 
-- On PARA reduce production stm_list -> stm_escreval 
-- On OUTROCASO reduce production stm_list -> stm_escreval 
-- On LITSTRING reduce production stm_list -> stm_escreval 
-- On LITCHAR reduce production stm_list -> stm_escreval 
-- On LEIA reduce production stm_list -> stm_escreval 
-- On INT reduce production stm_list -> stm_escreval 
-- On ID reduce production stm_list -> stm_escreval 
-- On FLOAT reduce production stm_list -> stm_escreval 
-- On FIMSE reduce production stm_list -> stm_escreval 
-- On FIMPARA reduce production stm_list -> stm_escreval 
-- On FIMFUNCAO reduce production stm_list -> stm_escreval 
-- On FIMESCOLHA reduce production stm_list -> stm_escreval 
-- On FIMENQUANTO reduce production stm_list -> stm_escreval 
-- On FIMALGORITMO reduce production stm_list -> stm_escreval 
-- On FALSO reduce production stm_list -> stm_escreval 
-- On ESCREVAL reduce production stm_list -> stm_escreval 
-- On ESCREVA reduce production stm_list -> stm_escreval 
-- On ESCOLHA reduce production stm_list -> stm_escreval 
-- On ENQUANTO reduce production stm_list -> stm_escreval 
-- On CASO reduce production stm_list -> stm_escreval 
-- On APAR reduce production stm_list -> stm_escreval 

State 136:
stm_list -> stm_escreva . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_escreva 
-- On SENAO reduce production stm_list -> stm_escreva 
-- On SE reduce production stm_list -> stm_escreva 
-- On RETORNE reduce production stm_list -> stm_escreva 
-- On PARA reduce production stm_list -> stm_escreva 
-- On OUTROCASO reduce production stm_list -> stm_escreva 
-- On LITSTRING reduce production stm_list -> stm_escreva 
-- On LITCHAR reduce production stm_list -> stm_escreva 
-- On LEIA reduce production stm_list -> stm_escreva 
-- On INT reduce production stm_list -> stm_escreva 
-- On ID reduce production stm_list -> stm_escreva 
-- On FLOAT reduce production stm_list -> stm_escreva 
-- On FIMSE reduce production stm_list -> stm_escreva 
-- On FIMPARA reduce production stm_list -> stm_escreva 
-- On FIMFUNCAO reduce production stm_list -> stm_escreva 
-- On FIMESCOLHA reduce production stm_list -> stm_escreva 
-- On FIMENQUANTO reduce production stm_list -> stm_escreva 
-- On FIMALGORITMO reduce production stm_list -> stm_escreva 
-- On FALSO reduce production stm_list -> stm_escreva 
-- On ESCREVAL reduce production stm_list -> stm_escreva 
-- On ESCREVA reduce production stm_list -> stm_escreva 
-- On ESCOLHA reduce production stm_list -> stm_escreva 
-- On ENQUANTO reduce production stm_list -> stm_escreva 
-- On CASO reduce production stm_list -> stm_escreva 
-- On APAR reduce production stm_list -> stm_escreva 

State 137:
stm_list -> stm_escolha . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_escolha 
-- On SENAO reduce production stm_list -> stm_escolha 
-- On SE reduce production stm_list -> stm_escolha 
-- On RETORNE reduce production stm_list -> stm_escolha 
-- On PARA reduce production stm_list -> stm_escolha 
-- On OUTROCASO reduce production stm_list -> stm_escolha 
-- On LITSTRING reduce production stm_list -> stm_escolha 
-- On LITCHAR reduce production stm_list -> stm_escolha 
-- On LEIA reduce production stm_list -> stm_escolha 
-- On INT reduce production stm_list -> stm_escolha 
-- On ID reduce production stm_list -> stm_escolha 
-- On FLOAT reduce production stm_list -> stm_escolha 
-- On FIMSE reduce production stm_list -> stm_escolha 
-- On FIMPARA reduce production stm_list -> stm_escolha 
-- On FIMFUNCAO reduce production stm_list -> stm_escolha 
-- On FIMESCOLHA reduce production stm_list -> stm_escolha 
-- On FIMENQUANTO reduce production stm_list -> stm_escolha 
-- On FIMALGORITMO reduce production stm_list -> stm_escolha 
-- On FALSO reduce production stm_list -> stm_escolha 
-- On ESCREVAL reduce production stm_list -> stm_escolha 
-- On ESCREVA reduce production stm_list -> stm_escolha 
-- On ESCOLHA reduce production stm_list -> stm_escolha 
-- On ENQUANTO reduce production stm_list -> stm_escolha 
-- On CASO reduce production stm_list -> stm_escolha 
-- On APAR reduce production stm_list -> stm_escolha 

State 138:
stm_list -> stm_enquanto . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_enquanto 
-- On SENAO reduce production stm_list -> stm_enquanto 
-- On SE reduce production stm_list -> stm_enquanto 
-- On RETORNE reduce production stm_list -> stm_enquanto 
-- On PARA reduce production stm_list -> stm_enquanto 
-- On OUTROCASO reduce production stm_list -> stm_enquanto 
-- On LITSTRING reduce production stm_list -> stm_enquanto 
-- On LITCHAR reduce production stm_list -> stm_enquanto 
-- On LEIA reduce production stm_list -> stm_enquanto 
-- On INT reduce production stm_list -> stm_enquanto 
-- On ID reduce production stm_list -> stm_enquanto 
-- On FLOAT reduce production stm_list -> stm_enquanto 
-- On FIMSE reduce production stm_list -> stm_enquanto 
-- On FIMPARA reduce production stm_list -> stm_enquanto 
-- On FIMFUNCAO reduce production stm_list -> stm_enquanto 
-- On FIMESCOLHA reduce production stm_list -> stm_enquanto 
-- On FIMENQUANTO reduce production stm_list -> stm_enquanto 
-- On FIMALGORITMO reduce production stm_list -> stm_enquanto 
-- On FALSO reduce production stm_list -> stm_enquanto 
-- On ESCREVAL reduce production stm_list -> stm_enquanto 
-- On ESCREVA reduce production stm_list -> stm_enquanto 
-- On ESCOLHA reduce production stm_list -> stm_enquanto 
-- On ENQUANTO reduce production stm_list -> stm_enquanto 
-- On CASO reduce production stm_list -> stm_enquanto 
-- On APAR reduce production stm_list -> stm_enquanto 

State 139:
stm_list -> stm_attr . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_list -> stm_attr 
-- On SENAO reduce production stm_list -> stm_attr 
-- On SE reduce production stm_list -> stm_attr 
-- On RETORNE reduce production stm_list -> stm_attr 
-- On PARA reduce production stm_list -> stm_attr 
-- On OUTROCASO reduce production stm_list -> stm_attr 
-- On LITSTRING reduce production stm_list -> stm_attr 
-- On LITCHAR reduce production stm_list -> stm_attr 
-- On LEIA reduce production stm_list -> stm_attr 
-- On INT reduce production stm_list -> stm_attr 
-- On ID reduce production stm_list -> stm_attr 
-- On FLOAT reduce production stm_list -> stm_attr 
-- On FIMSE reduce production stm_list -> stm_attr 
-- On FIMPARA reduce production stm_list -> stm_attr 
-- On FIMFUNCAO reduce production stm_list -> stm_attr 
-- On FIMESCOLHA reduce production stm_list -> stm_attr 
-- On FIMENQUANTO reduce production stm_list -> stm_attr 
-- On FIMALGORITMO reduce production stm_list -> stm_attr 
-- On FALSO reduce production stm_list -> stm_attr 
-- On ESCREVAL reduce production stm_list -> stm_attr 
-- On ESCREVA reduce production stm_list -> stm_attr 
-- On ESCOLHA reduce production stm_list -> stm_attr 
-- On ENQUANTO reduce production stm_list -> stm_attr 
-- On CASO reduce production stm_list -> stm_attr 
-- On APAR reduce production stm_list -> stm_attr 

State 140:
list(stm_list) -> stm_list list(stm_list) . [ SENAO OUTROCASO FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO CASO ]
-- On SENAO reduce production list(stm_list) -> stm_list list(stm_list) 
-- On OUTROCASO reduce production list(stm_list) -> stm_list list(stm_list) 
-- On FIMSE reduce production list(stm_list) -> stm_list list(stm_list) 
-- On FIMPARA reduce production list(stm_list) -> stm_list list(stm_list) 
-- On FIMFUNCAO reduce production list(stm_list) -> stm_list list(stm_list) 
-- On FIMESCOLHA reduce production list(stm_list) -> stm_list list(stm_list) 
-- On FIMENQUANTO reduce production list(stm_list) -> stm_list list(stm_list) 
-- On FIMALGORITMO reduce production list(stm_list) -> stm_list list(stm_list) 
-- On CASO reduce production list(stm_list) -> stm_list list(stm_list) 

State 141:
expr -> fcall . [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
stm_fcall -> fcall . PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On PTV shift to state 142
-- On XOU reduce production expr -> fcall 
-- On SUB reduce production expr -> fcall 
-- On SOMA reduce production expr -> fcall 
-- On POTENCIA reduce production expr -> fcall 
-- On OU reduce production expr -> fcall 
-- On MULT reduce production expr -> fcall 
-- On MOD reduce production expr -> fcall 
-- On MENORIGUAL reduce production expr -> fcall 
-- On MENOR reduce production expr -> fcall 
-- On MAIORIGUAL reduce production expr -> fcall 
-- On MAIOR reduce production expr -> fcall 
-- On IGUAL reduce production expr -> fcall 
-- On E reduce production expr -> fcall 
-- On DIVISAO reduce production expr -> fcall 
-- On DIFERENTE reduce production expr -> fcall 
-- On ATRIB reduce production expr -> fcall 

State 142:
stm_fcall -> fcall PTV . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_fcall -> fcall PTV 
-- On SENAO reduce production stm_fcall -> fcall PTV 
-- On SE reduce production stm_fcall -> fcall PTV 
-- On RETORNE reduce production stm_fcall -> fcall PTV 
-- On PARA reduce production stm_fcall -> fcall PTV 
-- On OUTROCASO reduce production stm_fcall -> fcall PTV 
-- On LITSTRING reduce production stm_fcall -> fcall PTV 
-- On LITCHAR reduce production stm_fcall -> fcall PTV 
-- On LEIA reduce production stm_fcall -> fcall PTV 
-- On INT reduce production stm_fcall -> fcall PTV 
-- On ID reduce production stm_fcall -> fcall PTV 
-- On FLOAT reduce production stm_fcall -> fcall PTV 
-- On FIMSE reduce production stm_fcall -> fcall PTV 
-- On FIMPARA reduce production stm_fcall -> fcall PTV 
-- On FIMFUNCAO reduce production stm_fcall -> fcall PTV 
-- On FIMESCOLHA reduce production stm_fcall -> fcall PTV 
-- On FIMENQUANTO reduce production stm_fcall -> fcall PTV 
-- On FIMALGORITMO reduce production stm_fcall -> fcall PTV 
-- On FALSO reduce production stm_fcall -> fcall PTV 
-- On ESCREVAL reduce production stm_fcall -> fcall PTV 
-- On ESCREVA reduce production stm_fcall -> fcall PTV 
-- On ESCOLHA reduce production stm_fcall -> fcall PTV 
-- On ENQUANTO reduce production stm_fcall -> fcall PTV 
-- On CASO reduce production stm_fcall -> fcall PTV 
-- On APAR reduce production stm_fcall -> fcall PTV 

State 143:
expr -> expr . SOMA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . SUB expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . MULT expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . MOD expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . IGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . MENOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . MAIOR expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . E expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . OU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
expr -> expr . XOU expr [ XOU SUB SOMA POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ATRIB ]
stm_attr -> expr . ATRIB expr PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77
-- On ATRIB shift to state 144

State 144:
stm_attr -> expr ATRIB . expr PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On APAR shift to state 45
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On fcall shift to state 49
-- On expr shift to state 145

State 145:
expr -> expr . SOMA expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . SUB expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MULT expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . DIVISAO expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . POTENCIA expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MOD expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . IGUAL expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . DIFERENTE expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MENOR expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MENORIGUAL expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MAIOR expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . MAIORIGUAL expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . E expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . OU expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
expr -> expr . XOU expr [ XOU SUB SOMA PTV POTENCIA OU MULT MOD MENORIGUAL MENOR MAIORIGUAL MAIOR IGUAL E DIVISAO DIFERENTE ]
stm_attr -> expr ATRIB expr . PTV [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On XOU shift to state 51
-- On SUB shift to state 53
-- On SOMA shift to state 63
-- On PTV shift to state 146
-- On POTENCIA shift to state 55
-- On OU shift to state 79
-- On MULT shift to state 57
-- On MOD shift to state 59
-- On MENORIGUAL shift to state 65
-- On MENOR shift to state 67
-- On MAIORIGUAL shift to state 69
-- On MAIOR shift to state 71
-- On IGUAL shift to state 73
-- On E shift to state 75
-- On DIVISAO shift to state 61
-- On DIFERENTE shift to state 77

State 146:
stm_attr -> expr ATRIB expr PTV . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_attr -> expr ATRIB expr PTV 
-- On SENAO reduce production stm_attr -> expr ATRIB expr PTV 
-- On SE reduce production stm_attr -> expr ATRIB expr PTV 
-- On RETORNE reduce production stm_attr -> expr ATRIB expr PTV 
-- On PARA reduce production stm_attr -> expr ATRIB expr PTV 
-- On OUTROCASO reduce production stm_attr -> expr ATRIB expr PTV 
-- On LITSTRING reduce production stm_attr -> expr ATRIB expr PTV 
-- On LITCHAR reduce production stm_attr -> expr ATRIB expr PTV 
-- On LEIA reduce production stm_attr -> expr ATRIB expr PTV 
-- On INT reduce production stm_attr -> expr ATRIB expr PTV 
-- On ID reduce production stm_attr -> expr ATRIB expr PTV 
-- On FLOAT reduce production stm_attr -> expr ATRIB expr PTV 
-- On FIMSE reduce production stm_attr -> expr ATRIB expr PTV 
-- On FIMPARA reduce production stm_attr -> expr ATRIB expr PTV 
-- On FIMFUNCAO reduce production stm_attr -> expr ATRIB expr PTV 
-- On FIMESCOLHA reduce production stm_attr -> expr ATRIB expr PTV 
-- On FIMENQUANTO reduce production stm_attr -> expr ATRIB expr PTV 
-- On FIMALGORITMO reduce production stm_attr -> expr ATRIB expr PTV 
-- On FALSO reduce production stm_attr -> expr ATRIB expr PTV 
-- On ESCREVAL reduce production stm_attr -> expr ATRIB expr PTV 
-- On ESCREVA reduce production stm_attr -> expr ATRIB expr PTV 
-- On ESCOLHA reduce production stm_attr -> expr ATRIB expr PTV 
-- On ENQUANTO reduce production stm_attr -> expr ATRIB expr PTV 
-- On CASO reduce production stm_attr -> expr ATRIB expr PTV 
-- On APAR reduce production stm_attr -> expr ATRIB expr PTV 

State 147:
stm_enquanto -> ENQUANTO expr FACA list(stm_list) . FIMENQUANTO [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FIMENQUANTO shift to state 148

State 148:
stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On SENAO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On SE reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On RETORNE reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On PARA reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On OUTROCASO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On LITSTRING reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On LITCHAR reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On LEIA reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On INT reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On ID reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FLOAT reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FIMSE reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FIMPARA reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FIMFUNCAO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FIMESCOLHA reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FIMENQUANTO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FIMALGORITMO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On FALSO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On ESCREVAL reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On ESCREVA reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On ESCOLHA reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On ENQUANTO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On CASO reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 
-- On APAR reduce production stm_enquanto -> ENQUANTO expr FACA list(stm_list) FIMENQUANTO 

State 149:
case -> CASO LITCHAR list(stm_list) . [ OUTROCASO CASO ]
-- On OUTROCASO reduce production case -> CASO LITCHAR list(stm_list) 
-- On CASO reduce production case -> CASO LITCHAR list(stm_list) 

State 150:
case -> CASO INT . list(stm_list) [ OUTROCASO CASO ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 151
-- On fcall shift to state 141
-- On expr shift to state 143
-- On OUTROCASO reduce production list(stm_list) -> 
-- On CASO reduce production list(stm_list) -> 

State 151:
case -> CASO INT list(stm_list) . [ OUTROCASO CASO ]
-- On OUTROCASO reduce production case -> CASO INT list(stm_list) 
-- On CASO reduce production case -> CASO INT list(stm_list) 

State 152:
stm_escolha -> ESCOLHA ID nonempty_list(case) . OUTROCASO list(stm_list) FIMESCOLHA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On OUTROCASO shift to state 153

State 153:
stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO . list(stm_list) FIMESCOLHA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 154
-- On fcall shift to state 141
-- On expr shift to state 143
-- On FIMESCOLHA reduce production list(stm_list) -> 

State 154:
stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) . FIMESCOLHA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FIMESCOLHA shift to state 155

State 155:
stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On SENAO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On SE reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On RETORNE reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On PARA reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On OUTROCASO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On LITSTRING reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On LITCHAR reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On LEIA reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On INT reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On ID reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FLOAT reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FIMSE reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FIMPARA reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FIMFUNCAO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FIMESCOLHA reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FIMENQUANTO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FIMALGORITMO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On FALSO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On ESCREVAL reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On ESCREVA reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On ESCOLHA reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On ENQUANTO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On CASO reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 
-- On APAR reduce production stm_escolha -> ESCOLHA ID nonempty_list(case) OUTROCASO list(stm_list) FIMESCOLHA 

State 156:
nonempty_list(case) -> case . [ OUTROCASO ]
nonempty_list(case) -> case . nonempty_list(case) [ OUTROCASO ]
-- On CASO shift to state 124
-- On nonempty_list(case) shift to state 157
-- On case shift to state 156
-- On OUTROCASO reduce production nonempty_list(case) -> case 

State 157:
nonempty_list(case) -> case nonempty_list(case) . [ OUTROCASO ]
-- On OUTROCASO reduce production nonempty_list(case) -> case nonempty_list(case) 

State 158:
stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) . FIMPARA [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FIMPARA shift to state 159

State 159:
stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On SENAO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On SE reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On RETORNE reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On PARA reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On OUTROCASO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On LITSTRING reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On LITCHAR reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On LEIA reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On INT reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On ID reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FLOAT reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FIMSE reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FIMPARA reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FIMFUNCAO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FIMESCOLHA reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FIMENQUANTO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FIMALGORITMO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On FALSO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On ESCREVAL reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On ESCREVA reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On ESCOLHA reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On ENQUANTO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On CASO reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 
-- On APAR reduce production stm_para -> PARA expr DE expr ATE expr passo FACA list(stm_list) FIMPARA 

State 160:
stm_se -> SE expr ENTAO list(stm_list) . option(stm_senao) FIMSE [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On SENAO shift to state 161
-- On stm_senao shift to state 163
-- On option(stm_senao) shift to state 164
-- On FIMSE reduce production option(stm_senao) -> 

State 161:
stm_senao -> SENAO . list(stm_list) [ FIMSE ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 162
-- On fcall shift to state 141
-- On expr shift to state 143
-- On FIMSE reduce production list(stm_list) -> 

State 162:
stm_senao -> SENAO list(stm_list) . [ FIMSE ]
-- On FIMSE reduce production stm_senao -> SENAO list(stm_list) 

State 163:
option(stm_senao) -> stm_senao . [ FIMSE ]
-- On FIMSE reduce production option(stm_senao) -> stm_senao 

State 164:
stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) . FIMSE [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On FIMSE shift to state 165

State 165:
stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE . [ VERDADEIRO SENAO SE RETORNE PARA OUTROCASO LITSTRING LITCHAR LEIA INT ID FLOAT FIMSE FIMPARA FIMFUNCAO FIMESCOLHA FIMENQUANTO FIMALGORITMO FALSO ESCREVAL ESCREVA ESCOLHA ENQUANTO CASO APAR ]
-- On VERDADEIRO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On SENAO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On SE reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On RETORNE reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On PARA reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On OUTROCASO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On LITSTRING reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On LITCHAR reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On LEIA reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On INT reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On ID reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FLOAT reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FIMSE reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FIMPARA reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FIMFUNCAO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FIMESCOLHA reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FIMENQUANTO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FIMALGORITMO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On FALSO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On ESCREVAL reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On ESCREVA reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On ESCOLHA reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On ENQUANTO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On CASO reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 
-- On APAR reduce production stm_se -> SE expr ENTAO list(stm_list) option(stm_senao) FIMSE 

State 166:
func_bloc -> INICIO list(stm_list) . FIMFUNCAO [ INICIO FUNCAO ]
-- On FIMFUNCAO shift to state 167

State 167:
func_bloc -> INICIO list(stm_list) FIMFUNCAO . [ INICIO FUNCAO ]
-- On INICIO reduce production func_bloc -> INICIO list(stm_list) FIMFUNCAO 
-- On FUNCAO reduce production func_bloc -> INICIO list(stm_list) FIMFUNCAO 

State 168:
func_decl -> FUNCAO ID APAR option(fparams) FPAR func_type VAR list(var_decl) func_bloc . [ INICIO FUNCAO ]
-- On INICIO reduce production func_decl -> FUNCAO ID APAR option(fparams) FPAR func_type VAR list(var_decl) func_bloc 
-- On FUNCAO reduce production func_decl -> FUNCAO ID APAR option(fparams) FPAR func_type VAR list(var_decl) func_bloc 

State 169:
option(fparams) -> fparams . [ FPAR ]
-- On FPAR reduce production option(fparams) -> fparams 

State 170:
separated_nonempty_list(VIRGULA,fparam) -> fparam . [ FPAR ]
separated_nonempty_list(VIRGULA,fparam) -> fparam . VIRGULA separated_nonempty_list(VIRGULA,fparam) [ FPAR ]
-- On VIRGULA shift to state 171
-- On FPAR reduce production separated_nonempty_list(VIRGULA,fparam) -> fparam 

State 171:
separated_nonempty_list(VIRGULA,fparam) -> fparam VIRGULA . separated_nonempty_list(VIRGULA,fparam) [ FPAR ]
-- On ID shift to state 24
-- On separated_nonempty_list(VIRGULA,fparam) shift to state 172
-- On fparam shift to state 170

State 172:
separated_nonempty_list(VIRGULA,fparam) -> fparam VIRGULA separated_nonempty_list(VIRGULA,fparam) . [ FPAR ]
-- On FPAR reduce production separated_nonempty_list(VIRGULA,fparam) -> fparam VIRGULA separated_nonempty_list(VIRGULA,fparam) 

State 173:
prog -> declaracao_algoritmo VAR list(var_decl) list(func_decl) . stm_block EOF [ # ]
-- On INICIO shift to state 174
-- On stm_block shift to state 177

State 174:
stm_block -> INICIO . list(stm_list) FIMALGORITMO [ EOF ]
-- On VERDADEIRO shift to state 36
-- On SE shift to state 37
-- On RETORNE shift to state 93
-- On PARA shift to state 97
-- On LITSTRING shift to state 38
-- On LITCHAR shift to state 39
-- On LEIA shift to state 107
-- On INT shift to state 40
-- On ID shift to state 41
-- On FLOAT shift to state 43
-- On FALSO shift to state 44
-- On ESCREVAL shift to state 112
-- On ESCREVA shift to state 117
-- On ESCOLHA shift to state 122
-- On ENQUANTO shift to state 126
-- On APAR shift to state 45
-- On stm_se shift to state 129
-- On stm_ret shift to state 130
-- On stm_para shift to state 131
-- On stm_list shift to state 132
-- On stm_leia shift to state 133
-- On stm_fcall shift to state 134
-- On stm_escreval shift to state 135
-- On stm_escreva shift to state 136
-- On stm_escolha shift to state 137
-- On stm_enquanto shift to state 138
-- On stm_attr shift to state 139
-- On lvalue shift to state 46
-- On logico_value shift to state 48
-- On list(stm_list) shift to state 175
-- On fcall shift to state 141
-- On expr shift to state 143
-- On FIMALGORITMO reduce production list(stm_list) -> 

State 175:
stm_block -> INICIO list(stm_list) . FIMALGORITMO [ EOF ]
-- On FIMALGORITMO shift to state 176

State 176:
stm_block -> INICIO list(stm_list) FIMALGORITMO . [ EOF ]
-- On EOF reduce production stm_block -> INICIO list(stm_list) FIMALGORITMO 

State 177:
prog -> declaracao_algoritmo VAR list(var_decl) list(func_decl) stm_block . EOF [ # ]
-- On EOF shift to state 178

State 178:
prog -> declaracao_algoritmo VAR list(var_decl) list(func_decl) stm_block EOF . [ # ]
-- On # reduce production prog -> declaracao_algoritmo VAR list(var_decl) list(func_decl) stm_block EOF 

State 179:
list(func_decl) -> func_decl . list(func_decl) [ INICIO ]
-- On FUNCAO shift to state 21
-- On list(func_decl) shift to state 180
-- On func_decl shift to state 179
-- On INICIO reduce production list(func_decl) -> 

State 180:
list(func_decl) -> func_decl list(func_decl) . [ INICIO ]
-- On INICIO reduce production list(func_decl) -> func_decl list(func_decl) 

